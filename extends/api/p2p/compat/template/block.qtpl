{% import (
    "strings"
    "strconv"
    "github.com/assetsadapterstore/livingthegrace-adapter/pkg/encoding"
    "github.com/assetsadapterstore/livingthegrace-adapter/pkg/api/p2p"

    "github.com/valyala/fastjson"
    proto "github.com/golang/protobuf/proto"
) %}
{% func Upgrade(src *fastjson.Value) %}
{
    "nextBlocks": [
        {% code
           blocks := src.GetArray("nextBlocks")
        %}
        {% for blockId, block := range blocks %}
            {
                "timestamp":           {%v block.Get("timestamp").String() %},
                "previousBlock":       {%qz= block.GetStringBytes("previousBlock") %},
                "blockATs":            {%qz= encoding.HexStringBytesToBase64Bytes(block.GetStringBytes("blockATs")) %},
                "totalFee":            {%v block.Get("totalFeeNQT").String() %},
                "nonce":               {%qz= block.GetStringBytes("nonce") %},
                "version":             {%v block.Get("version").String() %},
                "blockSignature":      {%qz= encoding.HexStringBytesToBase64Bytes(block.GetStringBytes("blockSignature")) %},
                "payloadHash":         {%qz= encoding.HexStringBytesToBase64Bytes(block.GetStringBytes("payloadHash")) %},
                "generatorPublicKey":  {%qz= encoding.HexStringBytesToBase64Bytes(block.GetStringBytes("generatorPublicKey")) %},
                "generationSignature": {%qz= encoding.HexStringBytesToBase64Bytes(block.GetStringBytes("generationSignature")) %},
                "totalAmount":         {%v block.Get("totalAmountNQT").String() %},
                "payloadLength":       {%v block.Get("payloadLength").String() %},
                "previousBlockHash":   {%qz= encoding.HexStringBytesToBase64Bytes(block.GetStringBytes("previousBlockHash")) %},
                "transactions": [
                    {% code
                       transactions := block.GetArray("transactions")
                    %}
                    {% for txId, tx := range transactions %}
                        {% code
                           surtype, _ := strconv.ParseInt(tx.Get("type").String(), 10, 64)
                           subtype, _ := strconv.ParseInt(tx.Get("subtype").String(), 10, 64)
                           attachment := tx.Get("attachment")
                        %}
                        {
                            {% switch surtype %}
                            {% case 0 %}
                                {% switch subtype %}
                                {% case 0 %}
                                "@type":"type.googleapis.com/p2p.OrdinaryPayment",
                                {% case 1 %}
                                "@type":"type.googleapis.com/p2p.MultiOutCreation",
                                "attachment": {
                                    "recipients": [
                                        {% code
                                           recipients := attachment.GetArray("recipients")
                                         %}
                                        {% for recipientId, recipient := range recipients %}
                                            {
                                                "id":     {%qz= recipient.GetStringBytes("0") %},
                                                "amount": {%qz= recipient.GetStringBytes("1") %}
                                            }{% if recipientId + 1 < len(recipients) %},{% endif %}
                                        {% endfor %}
                                    ]
                                },
                                {% case 2 %}
                                "@type":"type.googleapis.com/p2p.MultiSameOutCreation",
                                "attachment": {
                                    "recipients": [
                                        {% code
                                           recipients := attachment.GetArray("recipients")
                                         %}
                                        {% for recipientId, recipient := range recipients %}
                                        {%qz= recipient.GetStringBytes() %}{% if recipientId + 1 < len(recipients) %},{% endif %}
                                        {% endfor %}
                                    ]
                                },
                                {% endswitch %}
                            {% case 1 %}
                                {% switch subtype %}
                                {% case 0 %}
                                "@type":"type.googleapis.com/p2p.ArbitaryMessage",
                                {% case 1 %}
                                "@type":"type.googleapis.com/p2p.AliasAssignment",
                                "attachment": {
                                    "alias": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("alias")) %},
                                    "uri": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("uri")) %}
                                },
                                {% case 5 %}
                                "@type":"type.googleapis.com/p2p.AccountInfo",
                                "attachment": {
                                    "name": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("name")) %},
                                    "description": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("description")) %}
                                },
                                {% case 6 %}
                                "@type":"type.googleapis.com/p2p.AliasSell",
                                "attachment": {
                                    "name": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("alias")) %},
                                    "price": {%v attachment.Get("priceNQT").String() %}
                                },
                                {% case 7 %}
                                "@type":"type.googleapis.com/p2p.AliasBuy",
                                "attachment": {
                                    "name": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("alias")) %}
                                },
                                {% endswitch %}
                            {% case 2 %}
                                {% switch subtype %}
                                {% case 0 %}
                                "@type":"type.googleapis.com/p2p.AssetIssuance",
                                "attachment": {
                                    "name": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("name")) %},
                                    "description": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("description")) %},
                                    "quantity": {%v attachment.Get("quantityQNT").String() %},
                                    "decimals": {%v attachment.Get("decimals").String() %},
                                    "comment": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("comment")) %}
                                },
                                {% case 1 %}
                                "@type":"type.googleapis.com/p2p.AssetTransfer",
                                "attachment": {
                                    "asset": {%qz= attachment.GetStringBytes("asset") %},
                                    "quantity": {%v attachment.Get("quantityQNT").String() %}
                                    {% if tx.Get("version").String() == "0" %}, "comment": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("comment")) %}{% endif %}
                                },
                                {% case 2 %}
                                "@type":"type.googleapis.com/p2p.AskOrderPlacement",
                                "attachment": {
                                    "asset": {%qz= attachment.GetStringBytes("asset") %},
                                    "quantity": {%v attachment.Get("quantityQNT").String() %},
                                    "price": {%v attachment.Get("priceNQT").String() %},
                                    "comment": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("comment")) %}
                                },
                                {% case 3 %}
                                "@type":"type.googleapis.com/p2p.BidOrderPlacement",
                                "attachment": {
                                    "asset": {%qz= attachment.GetStringBytes("asset") %},
                                    "quantity": "{%v attachment.Get("quantityQNT").String() %}",
                                    "price": "{%v attachment.Get("priceNQT").String() %}"
                                },
                                {% case 4 %}
                                "@type":"type.googleapis.com/p2p.AskOrderCancellation",
                                "attachment": {
                                    "order": {%qz= attachment.GetStringBytes("order") %}
                                },
                                {% case 5 %}
                                "@type":"type.googleapis.com/p2p.BidOrderCancellation",
                                "attachment": {
                                    "order": {%qz= attachment.GetStringBytes("order") %}
                                },
                                {% endswitch %}
                            {% case 3 %}
                                {% switch subtype %}
                                {% case 0 %}
                                "@type":"type.googleapis.com/p2p.DigitalGoodsListing",
                                "attachment": {
                                    "name": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("name")) %},
                                    "description": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("description")) %},
                                    "tags": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("tags")) %},
                                    "quantity": {%v attachment.Get("quantity").String() %},
                                    "price": "{%v attachment.Get("priceNQT").String() %}"
                                },
                                {% case 1 %}
                                "@type":"type.googleapis.com/p2p.DigitalGoodsDelisting",
                                "attachment": {
                                    "id": {%qz= attachment.GetStringBytes("goods") %}
                                },
                                {% case 2 %}
                                "@type":"type.googleapis.com/p2p.DigitalGoodsPriceChange",
                                "attachment": {
                                    "id": {%qz= attachment.GetStringBytes("goods") %},
                                    "price": "{%v attachment.Get("priceNQT").String() %}"
                                },
                                {% case 3 %}
                                "@type":"type.googleapis.com/p2p.DigitalGoodsQuantityChange",
                                "attachment": {
                                    "id": {%qz= attachment.GetStringBytes("goods") %},
                                    "delta": {%v attachment.Get("deltaQuantity").String() %}
                                },
                                {% case 4 %}
                                "@type":"type.googleapis.com/p2p.DigitalGoodsPurchase",
                                "attachment": {
                                    "id": {%qz= attachment.GetStringBytes("goods") %},
                                    "quantity": {%v attachment.Get("quantity").String() %},
                                    "price": "{%v attachment.Get("priceNQT").String() %}",
                                    "deliveryDeadlineTimestamp": {%v attachment.Get("deliveryDeadlineTimestamp").String() %}
                                },
                                {% case 5 %}
                                "@type":"type.googleapis.com/p2p.DigitalGoodsDelivery",
                                "attachment": {
                                    "purchase": {%qz= attachment.GetStringBytes("purchase") %},
                                    "isText": {% if attachment.GetBool("goodsIsText") %}true{% else %}false{% endif %},
                                    "data": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("goodsData")) %},
                                    "nonce": {%qz= encoding.HexStringBytesToBase64Bytes(attachment.GetStringBytes("goodsNonce")) %},
                                    "discount": "{%v attachment.Get("discountNQT").String() %}"
                                },
                                {% case 6 %}
                                "@type":"type.googleapis.com/p2p.DigitalGoodsFeedback",
                                "attachment": {
                                    "purchase": {%qz= attachment.GetStringBytes("purchase") %}
                                },
                                {% case 7 %}
                                "@type":"type.googleapis.com/p2p.DigitalGoodsRefund",
                                "attachment": {
                                    "purchase": {%qz= attachment.GetStringBytes("purchase") %},
                                    "refund": "{%v attachment.Get("refundNQT").String() %}"
                                },
                                {% endswitch %}
                            {% case 4 %}
                                {% switch subtype %}
                                {% case 0%}
                                "@type":"type.googleapis.com/p2p.EffectiveBalanceLeasing",
                                "attachment": {
                                    "period": {%v attachment.Get("period").String() %}
                                },
                                {% endswitch %}
                            {% case 20 %}
                                {% switch subtype %}
                                {% case 0%}
                                "@type":"type.googleapis.com/p2p.RewardRecipientAssignment",
                                {% endswitch %}
                            {% case 21 %}
                                {% switch subtype %}
                                {% case 0 %}
                                "@type":"type.googleapis.com/p2p.EscrowCreation",
                                "attachment": {
                                    "amount": {%qz= attachment.GetStringBytes("amountNQT") %},
                                    "deadline": {%v attachment.Get("deadline").String() %},
                                    "deadlineAction": {%qz= attachment.GetStringBytes("deadlineAction") %},
                                    "requiredSigners": {%v attachment.Get("requiredSigners").String() %},
                                    "signers": [
                                        {% code
                                         signers := attachment.GetArray("signers")
                                         %}
                                        {% for signerId, signer := range signers %}
                                        {%qz= signer.GetStringBytes() %}{% if signerId + 1 < len(signers) %},{% endif %}
                                        {% endfor %}
                                    ]
                                },
                                {% case 1 %}
                                "@type":"type.googleapis.com/p2p.EscrowSign",
                                "attachment": {
                                    "id": {%qz= attachment.GetStringBytes("escrowId") %},
                                    "decision": {%qz= attachment.GetStringBytes("decision") %}
                                },
                                {% case 2 %}
                                "@type":"type.googleapis.com/p2p.EscrowResult",
                                "attachment": {
                                    "id": {%qz= attachment.GetStringBytes("escrowId") %},
                                    "decision": {%v attachment.Get("decision").String() %}
                                },
                                {% case 3 %}
                                "@type":"type.googleapis.com/p2p.SubscriptionSubscribe",
                                "attachment": {
                                    "frequency": {%v attachment.Get("frequency").String() %}
                                },
                                {% case 4 %}
                                "@type":"type.googleapis.com/p2p.SubscriptionCancel",
                                "attachment": {
                                    "subscriptionId": {%qz= attachment.GetStringBytes("subscriptionId") %}
                                },
                                {% case 5 %}
                                "@type":"type.googleapis.com/p2p.SubscriptionPayment",
                                "attachment": {
                                    "subscriptionId": {%qz= attachment.GetStringBytes("subscriptionId") %}
                                }
                                {% endswitch %}
                            {% case 22 %}
                                {% switch subtype %}
                                {% case 0%}
                                "@type":"type.googleapis.com/p2p.AutomatedTransactionsCreation",
                                "attachment": {
                                    "name": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("name")) %},
                                    "description": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("description")) %},
                                    "bytes": {%qz= encoding.HexStringBytesToBase64Bytes(attachment.GetStringBytes("creationBytes")) %}
                                },
                                {% case 1%}
                                "@type":"type.googleapis.com/p2p.AutomatedTransactionsPayment",
                                {% endswitch %}
                            {% endswitch %}
                            "header": {
                                "version":         {%v tx.Get("version").String() %},
                                "timestamp":       {%v tx.Get("timestamp").String() %},
                                "amount":          {%v tx.Get("amountNQT").String() %},
                                "fee":             {%v tx.Get("feeNQT").String() %},
                                {% if tx.Exists("recipient") %}
                                "recipient":       {%qz= tx.GetStringBytes("recipient") %},
                                {% endif %}
                                "senderPublicKey": {%qz= encoding.HexStringBytesToBase64Bytes(tx.GetStringBytes("senderPublicKey")) %},
                                "deadline":        {%v tx.Get("deadline").String() %},
                                "ecBlockId":       {%qz= tx.GetStringBytes("ecBlockId") %},
                                "ecBlockHeight":   {%v tx.Get("ecBlockHeight").String() %},
                                {% if tx.Exists("referencedTransactionFullHash") && len(tx.GetStringBytes("referencedTransactionFullHash")) > 0 %}
                                "referencedTransactionFullHash": {%qz= encoding.HexStringBytesToBase64Bytes(tx.GetStringBytes("referencedTransactionFullHash")) %},
                                {% endif %}
                                "signature":       {%qz= encoding.HexStringBytesToBase64Bytes(tx.GetStringBytes("signature")) %}
                            }
                            {% code
                               hasMessage               :=  attachment.Exists("version.Message") || attachment.Exists("message")
                               hasEncryptedMessage      :=  attachment.Exists("version.EncryptedMessage")
                               hasPublicKeyAnnouncement :=  attachment.Exists("version.PublicKeyAnnouncement")
                               hasEncryptToSelfMessage  :=  attachment.Exists("version.EncryptToSelfMessage")
                             %}
                            {% if hasMessage || hasEncryptedMessage || hasPublicKeyAnnouncement || hasEncryptToSelfMessage %}
                            ,
                            "appendix": {
                                {% if hasMessage %}
                                "message": {
                                    "isText":  {% if attachment.GetBool("messageIsText") %}true{% else %}false{% endif %},
                                    "content": {%qz= encoding.StringBytesToBase64Bytes(attachment.GetStringBytes("message")) %}
                                }{% if hasEncryptedMessage || hasPublicKeyAnnouncement || hasEncryptToSelfMessage %},{% endif %}
                                {% endif %}
                                {% if hasEncryptedMessage %}
                                "encryptedMessage": {
                                    "data":   {%qz= encoding.HexStringBytesToBase64Bytes(attachment.GetStringBytes("encryptedMessage", "data")) %},
                                    "isText": {% if attachment.GetBool("encryptedMessage", "isText") %}true{% else %}false{% endif %},
                                    "nonce":  {%qz= encoding.HexStringBytesToBase64Bytes(attachment.GetStringBytes("encryptedMessage", "nonce")) %}
                                }{% if hasPublicKeyAnnouncement || hasEncryptToSelfMessage %},{% endif %}
                                {% endif %}
                                {% if hasPublicKeyAnnouncement %}
                                "publicKeyAnnouncement": {
                                    "publicKey": {%qz= encoding.HexStringBytesToBase64Bytes(attachment.GetStringBytes("recipientPublicKey")) %}
                                }{% if hasEncryptToSelfMessage %},{% endif %}
                                {% endif %}
                                {% if hasEncryptToSelfMessage %}    
                                "encryptToSelfMessage": {
                                    "data":   {%qz= encoding.HexStringBytesToBase64Bytes(attachment.GetStringBytes("encryptToSelfMessage", "data")) %},
                                    "isText": {% if attachment.GetBool("encryptToSelfMessage", "isText") %}true{% else %}false{% endif %},
                                    "nonce":  {%qz= encoding.HexStringBytesToBase64Bytes(attachment.GetStringBytes("encryptToSelfMessage", "nonce")) %}
                                }
                                {% endif %}
                            }
                            {% endif %}
                        }{% if txId + 1 < len(transactions) %},{% endif %}
                    {% endfor %}
                ]
            }{% if blockId + 1 < len(blocks) %},{% endif %}
        {% endfor %}
    ]
}
{% endfunc %}
{% func Downgrade(pb *p2p.GetNextBlocksResponse) %}
{
    "nextBlocks": [
        {% code
           blocks := pb.NextBlocks
         %}
        {% for blockId, block := range blocks %}
        {
            "timestamp":           {%v block.Timestamp %},
            "previousBlock":       "{%v block.PreviousBlock %}",
            "blockATs":            {% if string(block.BlockATs) == "" %}null{% else %}{%qz= encoding.BytesToHexStringBytes(block.BlockATs) %}{% endif %},
            "totalFeeNQT":         {%v block.TotalFee %},
            "nonce":               "{%v block.Nonce %}",
            "version":             {%v block.Version %},
            "blockSignature":      {%qz= encoding.BytesToHexStringBytes(block.BlockSignature) %},
            "payloadHash":         {%qz= encoding.BytesToHexStringBytes(block.PayloadHash) %},
            "generatorPublicKey":  {%qz= encoding.BytesToHexStringBytes(block.GeneratorPublicKey) %},
            "generationSignature": {%qz= encoding.BytesToHexStringBytes(block.GenerationSignature) %},
            "totalAmountNQT":      {%v block.TotalAmount %},
            "payloadLength":       {%v block.PayloadLength %},
            "previousBlockHash":   {%qz= encoding.BytesToHexStringBytes(block.PreviousBlockHash) %},
            "transactions": [
                {% code
                   transactions := block.Transactions
                 %}
                {% for txId, transaction := range transactions %}
                {
                    {% code
                       txType := transaction.GetTypeUrl()
                       if slash := strings.LastIndex(txType, "/"); slash >= 0 {
                           txType = txType[slash+1:]
                       }

                       hasAttachmentData := false
                       var header *p2p.TransactionHeader
                       var appendix *p2p.Appendix
                     %}
                    {% switch txType %}
                        {% case "p2p.OrdinaryPayment" %}
                        {% code
                           tx := new(p2p.OrdinaryPayment)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                         %}
                            "type":       0,
                            "subtype":    0,
                            "attachment": {
                        {% case "p2p.MultiOutCreation" %}
                        {% code
                           tx := new(p2p.MultiOutCreation)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       0,
                            "subtype":    1,
                            "attachment": {
                                "recipients": [
                                    {% code
                                       recipients := tx.Attachment.Recipients
                                     %}
                                    {% for recipientId, recipient := range recipients %}
                                    [
                                        "{%v recipient.Id %}",
                                        "{%v recipient.Amount %}"
                                    ]
                                    {% if recipientId + 1 < len(recipients) %},{% endif %}
                                    {% endfor %}
                                ]
                        {% case "p2p.MultiSameOutCreation" %}
                        {% code
                           tx := new(p2p.MultiSameOutCreation)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       0,
                            "subtype":    2,
                            "attachment": {
                                "recipients": [
                                    {% code
                                       recipients := tx.Attachment.Recipients
                                     %}
                                    {% for recipientId, recipient := range recipients %}
                                    "{%v recipient %}"
                                    {% if recipientId + 1 < len(recipients) %},{% endif %}
                                    {% endfor %}
                                ]
                        {% case "p2p.ArbitaryMessage" %}
                        {% code
                           tx := new(p2p.ArbitaryMessage)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                         %}
                            "type":       1,
                            "subtype":    0,
                            "attachment": {
                        {% case "p2p.AliasAssignment" %}
                        {% code
                           tx := new(p2p.AliasAssignment)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       1,
                            "subtype":    1,
                            "attachment": {
                                "alias": {%qz= tx.Attachment.Alias %},
                                "uri": {%qz= tx.Attachment.Uri %}
                        {% case "p2p.AccountInfo" %}
                        {% code
                           tx := new(p2p.AccountInfo)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       1,
                            "subtype":    5,
                            "attachment": {
                                "name": {%qz= tx.Attachment.Name %},
                                "description": {%qz= tx.Attachment.Description %}
                        {% case "p2p.AliasSell" %}
                        {% code
                           tx := new(p2p.AliasSell)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       1,
                            "subtype":    6,
                            {% if header.Recipient == 0 %}"recipient":"0",{% endif %}
                            "attachment": {
                                "alias":     {%qz= tx.Attachment.Name %},
                                "priceNQT": {%v tx.Attachment.Price %}
                        {% case "p2p.AliasBuy" %}
                        {% code
                           tx := new(p2p.AliasBuy)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       1,
                            "subtype":    7,
                            "attachment": {
                                "alias": {%qz= tx.Attachment.Name %}
                        {% case "p2p.AssetIssuance" %}
                        {% code
                           tx := new(p2p.AssetIssuance)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       2,
                            "subtype":    0,
                            "attachment": {
                                "name": {%qz= tx.Attachment.Name %},
                                "description": {%qz= tx.Attachment.Description %},
                                "quantityQNT": {%v tx.Attachment.Quantity %},
                                "decimals": {%v tx.Attachment.Decimals %}
                                {% if len(tx.Attachment.Comment) > 0 %}, "comment": {%qz= tx.Attachment.Comment %}{% endif %}
                        {% case "p2p.AssetTransfer" %}
                        {% code
                           tx := new(p2p.AssetTransfer)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       2,
                            "subtype":    1,
                            "attachment": {
                                "asset": "{%v tx.Attachment.Asset %}",
                                "quantityQNT": {%v tx.Attachment.Quantity %}
                                {% if header.Version == 0 %}, "comment": {%qz= tx.Attachment.Comment %}{% endif %}
                        {% case "p2p.AskOrderPlacement" %}
                        {% code
                           tx := new(p2p.AskOrderPlacement)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       2,
                            "subtype":    2,
                            "attachment": {
                                "asset": "{%v tx.Attachment.Asset %}",
                                "quantityQNT": {%v tx.Attachment.Quantity %},
                                "priceNQT": {%v tx.Attachment.Price %}
                                {% if len(tx.Attachment.Comment) > 0 %}, "comment": {%qz= tx.Attachment.Comment %}{% endif %}
                        {% case "p2p.BidOrderPlacement" %}
                        {% code
                           tx := new(p2p.BidOrderPlacement)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       2,
                            "subtype":    3,
                            "attachment": {
                                "asset": "{%v tx.Attachment.Asset %}",
                                "quantityQNT": {%v tx.Attachment.Quantity %},
                                "priceNQT": {%v tx.Attachment.Price %}
                        {% case "p2p.AskOrderCancellation" %}
                        {% code
                           tx := new(p2p.AskOrderCancellation)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       2,
                            "subtype":    4,
                            "attachment": {
                                "order": "{%v tx.Attachment.Order %}"
                        {% case "p2p.BidOrderCancellation" %}
                        {% code
                           tx := new(p2p.BidOrderCancellation)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       2,
                            "subtype":    5,
                            "attachment": {
                                "order": "{%v tx.Attachment.Order %}"
                        {% case "p2p.DigitalGoodsListing" %}
                        {% code
                           tx := new(p2p.DigitalGoodsListing)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       3,
                            "subtype":    0,
                            "attachment": {
                                "name": {%qz= tx.Attachment.Name %},
                                "description": {%qz= tx.Attachment.Description %},
                                "tags": {%qz= tx.Attachment.Tags %},
                                "quantity": {%v tx.Attachment.Quantity %},
                                "priceNQT": {%v tx.Attachment.Price %}
                        {% case "p2p.DigitalGoodsDelisting" %}
                        {% code
                           tx := new(p2p.DigitalGoodsDelisting)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       3,
                            "subtype":    1,
                            "attachment": {
                                "goods": "{%v tx.Attachment.Id %}"
                        {% case "p2p.DigitalGoodsPriceChange" %}
                        {% code
                           tx := new(p2p.DigitalGoodsPriceChange)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       3,
                            "subtype":    2,
                            "attachment": {
                                "goods": "{%v tx.Attachment.Id %}",
                                "priceNQT": {%v tx.Attachment.Price %}
                        {% case "p2p.DigitalGoodsQuantityChange" %}
                        {% code
                           tx := new(p2p.DigitalGoodsQuantityChange)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       3,
                            "subtype":    3,
                            "attachment": {
                                "goods": "{%v tx.Attachment.Id %}",
                                "deltaQuantity": {%v tx.Attachment.Delta %}
                        {% case "p2p.DigitalGoodsPurchase" %}
                        {% code
                           tx := new(p2p.DigitalGoodsPurchase)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       3,
                            "subtype":    4,
                            "attachment": {
                                "goods": "{%v tx.Attachment.Id %}",
                                "quantity": {%v tx.Attachment.Quantity %},
                                "priceNQT": {%v tx.Attachment.Price %},
                                "deliveryDeadlineTimestamp": {%v tx.Attachment.DeliveryDeadlineTimestamp %}
                        {% case "p2p.DigitalGoodsDelivery" %}
                        {% code
                           tx := new(p2p.DigitalGoodsDelivery)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       3,
                            "subtype":    5,
                            "attachment": {
                                "purchase": "{%v tx.Attachment.Purchase %}",
                                "goodsIsText": {% if tx.Attachment.IsText %}true{% else %}false{% endif %},
                                "goodsData": {%qz= encoding.BytesToHexStringBytes(tx.Attachment.Data) %},
                                "goodsNonce": {%qz= encoding.BytesToHexStringBytes(tx.Attachment.Nonce) %},
                                "discountNQT": {%v tx.Attachment.Discount %}
                        {% case "p2p.DigitalGoodsFeedback" %}
                        {% code
                           tx := new(p2p.DigitalGoodsFeedback)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       3,
                            "subtype":    6,
                            "attachment": {
                                "purchase": "{%v tx.Attachment.Purchase %}"
                        {% case "p2p.DigitalGoodsRefund" %}
                        {% code
                           tx := new(p2p.DigitalGoodsRefund)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       3,
                            "subtype":    7,
                            "attachment": {
                                "purchase": "{%v tx.Attachment.Purchase %}",
                                "refundNQT": {%v tx.Attachment.Refund %}
                        {% case "p2p.EffectiveBalanceLeasing" %}
                        {% code
                           tx := new(p2p.EffectiveBalanceLeasing)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       4,
                            "subtype":    0,
                            "attachment": {
                                "period": {%v tx.Attachment.Period %}
                        {% case "p2p.RewardRecipientAssignment" %}
                        {% code
                           tx := new(p2p.RewardRecipientAssignment)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                         %}
                            "type":       20,
                            "subtype":    0,
                            "attachment": {
                        {% case "p2p.EscrowCreation" %}
                        {% code
                           tx := new(p2p.EscrowCreation)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       21,
                            "subtype":    0,
                            "attachment": {
                                "amountNQT": "{%v tx.Attachment.Amount %}",
                                "deadline": {%v tx.Attachment.Deadline %},
                                "deadlineAction": "{%v tx.Attachment.DeadlineAction %}",
                                "requiredSigners": {%v tx.Attachment.RequiredSigners %},
                                "signers": [
                                    {% code
                                       signers := tx.Attachment.Signers
                                     %}
                                    {% for signerId, signer := range signers %}
                                        "{%v signer %}"{% if signerId + 1 < len(signers) %},{% endif %}
                                    {% endfor %}
                                ]
                        {% case "p2p.EscrowSign" %}
                        {% code
                           tx := new(p2p.EscrowSign)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       21,
                            "subtype":    1,
                            "attachment": {
                                "escrowId": "{%v tx.Attachment.Id %}",
                                "decision": "{%v tx.Attachment.Decision.String() %}"
                        {% case "p2p.EscrowResult" %}
                        {% code
                           tx := new(p2p.EscrowResult)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       21,
                            "subtype":    2,
                            "attachment": {
                                "escrowId": "{%v tx.Attachment.Id %}",
                                "decision": "{%v tx.Attachment.Decision %}"
                        {% case "p2p.SubscriptionSubscribe" %}
                        {% code
                           tx := new(p2p.SubscriptionSubscribe)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       21,
                            "subtype":    3,
                            "attachment": {
                                "frequency": {%v tx.Attachment.Frequency %}
                        {% case "p2p.SubscriptionCancel" %}
                        {% code
                           tx := new(p2p.SubscriptionCancel)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       21,
                            "subtype":    4,
                            "attachment": {
                                "subscriptionId": "{%v tx.Attachment.Id %}"
                        {% case "p2p.SubscriptionPayment" %}
                        {% code
                           tx := new(p2p.SubscriptionPayment)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       21,
                            "subtype":    5,
                            "attachment": {
                                "subscriptionId": "{%v tx.Attachment.Id %}"
                        {% case "p2p.AutomatedTransactionsCreation" %}
                        {% code
                           tx := new(p2p.AutomatedTransactionsCreation)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                           hasAttachmentData = true
                         %}
                            "type":       22,
                            "subtype":    0,
                            "attachment": {
                                "name": {%qz= tx.Attachment.Name %},
                                "description": {%qz= tx.Attachment.Description %},
                                "creationBytes": {%qz= encoding.BytesToHexStringBytes(tx.Attachment.Bytes) %}
                        {% case "p2p.AutomatedTransactionsPayment" %}
                        {% code
                           tx := new(p2p.AutomatedTransactionsPayment)
                           proto.Unmarshal(transaction.Value, tx)
                           header = tx.Header
                           appendix = tx.Appendix
                         %}
                            "type":       22,
                            "subtype":    1,
                            "attachment": {
                     {% endswitch %}
                     {% if appendix != nil %}
                            {% if hasAttachmentData %},{% endif %}
                            {% if appendix.Message != nil %}
                                "messageIsText": {% if appendix.Message.IsText %}true{% else %}false{% endif %},
                                "message": {%qz= appendix.Message.Content %}
                                {% if header.Version > 0 %}, "version.Message": {%v header.Version %}{% endif %}
                                {% if appendix.EncryptedMessage != nil || appendix.EncryptToSelfMessage != nil || appendix.PublicKeyAnnouncement != nil %},{% endif %}
                            {% endif %}
                            {% if appendix.EncryptedMessage != nil %}
                                "encryptedMessage": {
                                    "isText": {% if appendix.EncryptedMessage.IsText %}true{% else %}false{% endif %},
                                    "data": {%qz= encoding.BytesToHexStringBytes(appendix.EncryptedMessage.Data) %},
                                    "nonce": {%qz= encoding.BytesToHexStringBytes(appendix.EncryptedMessage.Nonce) %}
                                }
                                {% if header.Version > 0 %}, "version.EncryptedMessage": {%v header.Version %}{% endif %}
                                {% if appendix.EncryptToSelfMessage != nil || appendix.PublicKeyAnnouncement != nil %},{% endif %}
                            {% endif %}
                            {% if appendix.EncryptToSelfMessage != nil %}
                                "encryptToSelfMessage": {   
                                    "isText": {% if appendix.EncryptToSelfMessage.IsText %}true{% else %}false{% endif %},
                                    "data": {%qz= encoding.BytesToHexStringBytes(appendix.EncryptToSelfMessage.Data) %},
                                    "nonce": {%qz= encoding.BytesToHexStringBytes(appendix.EncryptToSelfMessage.Nonce) %}
                                }
                                {% if header.Version > 0 %}, "version.EncryptToSelfMessage": {%v header.Version %}{% endif %}
                                {% if appendix.PublicKeyAnnouncement != nil %},{% endif %}
                            {% endif %}
                            {% if appendix.PublicKeyAnnouncement != nil %}
                                "recipientPublicKey": {%qz= appendix.PublicKeyAnnouncement.PublicKey %}
                                {% if header.Version > 0 %}, "version.PublicKeyAnnouncement": {%v header.Version %}{% endif %}
                            {% endif %}
                     {% endif %}
                     {% if header.Version > 0 && txType != "p2p.OrdinaryPayment" && txType != "p2p.ArbitaryMessage" %}
                            {% if appendix != nil || hasAttachmentData %},{% endif %}
                            "version.{%v txType[4:] %}": {%v header.Version %}
                     {% endif %}
                     },
                     "version":         {%v header.Version %},
                     "timestamp":       {%v header.Timestamp %},
                     "amountNQT":       {%v header.Amount %},
                     "feeNQT":          {%v header.Fee %},
                     {% if header.Recipient != 0 %}
                                "recipient":       "{%v header.Recipient %}",
                     {% endif %}
                     "senderPublicKey": {%qz= encoding.BytesToHexStringBytes(header.SenderPublicKey) %},
                     "deadline":        {%v header.Deadline %},
                     "ecBlockId":       "{%v header.EcBlockId %}",
                     "ecBlockHeight":   {%v header.EcBlockHeight %},
                     {% if len(header.ReferencedTransactionFullHash) > 0 %}
                         "referencedTransactionFullHash": {%qz= encoding.BytesToHexStringBytes(header.ReferencedTransactionFullHash) %},
                     {% endif %}
                     "signature":       {%qz= encoding.BytesToHexStringBytes(header.Signature) %}

                 }{% if txId + 1 < len(transactions) %},{% endif %}
                 {% endfor %}
            ]
            
        }{% if blockId + 1 < len(blocks) %},{% endif %}
        {% endfor %}
    ]
}
{% endfunc %}
